<?php

/**
 * @file
 * Contains nidirect_driving_instructors.module.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\nidirect_driving_instructors\Form\DrivingInstructorSearchForm;
use Drupal\search_api\Query\QueryInterface;

/**
 * Implements hook_help().
 */
function nidirect_driving_instructors_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the nidirect_driving_instructors module.
    case 'help.page.nidirect_driving_instructors':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Driving instructor search form and results') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_token_info().
 */
function nidirect_driving_instructors_token_info() {
  $types['nidirect'] = ['name' => 'NI Direct'];

  $tokens['driving_instructor_search'] = [
    'name' => t('Driving instructor search'),
    'description' => t('Search form for finding driving instructors by postcode area.'),
  ];

  return [
    'types' => $types,
    'tokens' => ['nidirect' => $tokens],
  ];
}

/**
 * Implements hook_tokens().
 */
function nidirect_driving_instructors_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];

  if ($type == 'nidirect') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'driving_instructor_search':
          $output = \Drupal::formBuilder()->getForm(DrivingInstructorSearchForm::class);
          $replacements[$original] = render($output);
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_form_alter().
 */
function nidirect_driving_instructors_form_alter(&$form, &$form_state, &$form_id) {
  // Don't display the sort by or order options on the driving instructor exposed search form.
  if ($form['#id'] == 'views-exposed-form-driving-instructors-driving-instructor-results') {
    $form['sort_by']['#access'] = FALSE;
    $form['sort_order']['#access'] = FALSE;
  }
}

/**
 * Implements hook_search_api_query_alter().
 */
function nidirect_driving_instructors_search_api_query_alter(QueryInterface $query) {
  if ($query->getDisplayPlugin()->getPluginDefinition()['view_display'] == "driving_instructor_results") {
    $keys = $query->getKeys();

    // Remove the second part of any postcode queries.
    foreach ($keys as $id => $key) {
      // Match inward codes
      if (preg_match('/^[0-9]{1}[a-z]{2}$/i', $key)) {
        unset($keys[$id]);
      }
      // Match full codes with no spaces
      if (preg_match('/^bt.*([0-9]{1}[a-z]{2})/i', $key, $matches)) {
        $keys[$id] = str_replace($matches[1], '', $key);
      }
    }
    $query->keys(array_values($keys));
  }
}

/**
 * Implements hook_theme().
 */
function nidirect_driving_instructors_theme() {
  return [
    'nidirect_driving_instructors' => [
      'render element' => 'children',
    ],
  ];
}

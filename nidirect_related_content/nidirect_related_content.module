<?php

/**
 * @file
 * Contains nidirect_related_content.module.
 */

use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_pre_build().
 */
function nidirect_related_content_views_pre_build(ViewExecutable $view) {
  $id = $view->id();
  $display = $view->current_display;

  if ($id == 'related_content' && $display == 'content_by_theme') {

    $node = \Drupal::routeMatch()->getParameter('node');

    // Node preview display.
    if (empty($node)) {
      $node = \Drupal::routeMatch()->getParameter('node_preview');
    }

    if (empty($node->field_subtheme)) {
      return;
    }

    $sub_theme = $node->field_subtheme->target_id ?? 'all';
    $site_themes = $node->field_site_themes->target_id ?? 'all';

    $view->setArguments([$sub_theme, $site_themes]);
  }
}

/**
 * Implements hook_views_pre_render().
 */
function nidirect_related_content_views_pre_render(ViewExecutable $view) {
  if ($view->id() != 'related_content' && $view->current_display != 'content_by_theme') {
    return;
  }

  // Set the title of the view to be the parent term of the
  // present active subtheme term.
  $node = \Drupal::routeMatch()->getParameter('node');

  // Node preview display.
  if (empty($node)) {
    $node = \Drupal::routeMatch()->getParameter('node_preview');
  }

  if (empty($node->field_subtheme)) {
    return;
  }

  $sub_theme = $node->field_subtheme->target_id;

  if (!empty($sub_theme)) {
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($sub_theme);
    $view->setTitle($term->label());
  }
}

/**
 * Implements hook_preprocess_views_view_field().
 */
function nidirect_related_content_preprocess_views_view_field(&$variables) {
  if ($variables['view']->id() != 'related_content' && $variables['view']->current_display != 'content_by_theme') {
    return;
  }

  $node = \Drupal::routeMatch()->getParameter('node');

  // Node preview display.
  if (empty($node)) {
    $node = \Drupal::routeMatch()->getParameter('node_preview');
  }

  if ($node->id() == $variables['row']->nid) {
    $variables['output'] = $node->getTitle();
  }

  // Vary each rendered field in this display by URL because
  // the active page is never a link, just the title.
  $variables['#cache']['contexts'][] = 'url';
}

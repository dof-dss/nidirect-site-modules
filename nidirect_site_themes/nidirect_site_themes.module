<?php

/**
 * @file
 * Hook functions for nidirect_site_themes module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_item_list().
 *
 * We use this to manipulate the taxonomy manager options. it doesn't
 * use form API to generate this list so by preprocessing the theme item
 * it uses, we can very, very selectively prune off the vocabs the user
 * isn't allowed to access.
 *
 * Anything more substantial, we probably need to re-route the request
 * to our own controller class.
 */
function nidirect_site_themes_preprocess_item_list(&$variables) {
  if (\Drupal::routeMatch()->getRouteName() != 'taxonomy_manager.admin') {
    return;
  }

  foreach ($variables['items'] as $index => $item) {
    // Extract the vocab id from the URL (that's all we have to work with at this level).
    $matches = [];
    preg_match('#\/admin\/structure\/taxonomy_manager\/voc/(.+)\"#', $item['value']->getGeneratedLink(), $matches);
    $vocab_id = $matches[1];

    if (\Drupal::currentUser()->hasPermission('view terms in ' . $vocab_id) == FALSE) {
      unset($variables['items'][$index]);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function nidirect_site_themes_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id != 'taxonomy_manager.vocabulary_terms_form') {
    return;
  }

  // Look at the requested vocabulary id, alter form controls based on what permissions we have for the user.
  $taxonomy_vocabulary = \Drupal::routeMatch()->getParameter('$taxonomy_vocabulary');

  $form['toolbar']['add']['#attributes']['disabled'] = \Drupal::currentUser()->hasPermission("add terms in $taxonomy_vocabulary") == FALSE;
  $form['toolbar']['Search']['#attributes']['disabled'] = \Drupal::currentUser()->hasPermission("view terms in $taxonomy_vocabulary") == FALSE;
  if (\Drupal::currentUser()->hasPermission("add terms in $taxonomy_vocabulary") == FALSE) {
    // There's an AJAX callback attached to this (see TaxonomyManagerForm.php) so it's
    // easier to pretend we've already rendered the element than try to mess about with
    // the innards of that callback and its handler.
    hide($form['toolbar']['delete']);
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
//function nidirect_site_themes_local_tasks_alter(&$local_tasks) {
//  if (\Drupal::currentUser()->hasPermission('administer taxonomy') == FALSE) {
//    unset($local_tasks['entity.taxonomy_vocabulary.overview_form']);
//  }
//}

<?php

/**
 * @file
 * Contains code that provides user dashboard.
 */

use Drupal\user\Entity\User;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 */

/**
 * Implements hook_page_attachments().
 */
function nidirect_workflow_page_attachments(array &$attachments) {
  // Attach extra custom css for admin menu.
  $attachments['#attached']['library'][] = 'nidirect_workflow/admin.css';
}

/**
 * Implements hook_entity_presave().
 */
function nidirect_workflow_entity_presave(EntityInterface $entity) {
  // This will fire when nodes are created or edited.
  if ($entity->getEntityTypeId() == 'node') {
    switch ($entity->bundle()) {
      case 'article':
      case 'contact':
      case 'page':
        // We have just published a node type that is subject to auditing.
        if ($entity->isPublished()) {
          $next_audit_date = $entity->get('field_next_audit_due')->value;
          if (empty($next_audit_date)) {
            // No audit date set, set it for six months time.
            $entity->set('field_next_audit_due', date('Y-m-d', strtotime("+6 months")));
          }
        }
        break;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function nidirect_workflow_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Manage access to 'next audit date' field.
  if (($form_id == 'node_article_form')
    || ($form_id == 'node_article_edit_form')
    || ($form_id == 'node_contact_form')
    || ($form_id == 'node_contact_edit_form')
    || ($form_id == 'node_page_form')
    || ($form_id == 'node_page_edit_form')
  ) {
    $account = User::load(\Drupal::currentUser()->id());
    // Check user access level.
    if ($account->hasRole('administrator')) {
      // Admin can see audit date and change it.
      $form['field_next_audit_due']['#access'] = TRUE;
      $form['field_next_audit_due']['#disabled'] = FALSE;
    }
    elseif ($account->hasPermission('audit content')) {
      // If user has permission to audit content but is not an admin
      // then they can see the audit date but not change it.
      $form['field_next_audit_due']['#access'] = TRUE;
      $form['field_next_audit_due']['#disabled'] = TRUE;
    }
    else {
      // Hide the audit date for anyone else.
      $form['field_next_audit_due']['#access'] = FALSE;
    }
  }
}
